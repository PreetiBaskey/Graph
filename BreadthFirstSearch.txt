#include<bits/stdc++.h>
using namespace std;

const int V = 4;

void addEdge(vector<int> graph[], int source, int destination) {
    graph[source].push_back(destination);
    graph[destination].push_back(source);
}

void BFS(vector<int> graph[], int initial_node) {
    vector<int> visited(V, 0);
    queue<int> q;
    q.push(initial_node);
    visited[initial_node] = 1;
    while(!q.empty()) {
        int front_node = q.front();
        cout<<front_node<<" ";
        q.pop();
        for(int neighbour: graph[front_node]) {
            if(!visited[neighbour]) {
                q.push(neighbour);
                visited[neighbour] = 1;
            }
        }
    }
}

int main() {
    
    vector<int> graph[V];
    
    addEdge(graph, 0, 1);
    addEdge(graph, 0, 2);
    addEdge(graph, 0, 3);
    addEdge(graph, 1, 2);
    
    cout<<"BFS traversal is :- ";
    int initial_node = 0;
    BFS(graph, initial_node);
    
    return 0;
}
