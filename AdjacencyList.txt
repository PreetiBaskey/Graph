// Time Complexity :- 
/*Building the graph: O(E)
Printing the graph: O(V + E)
Total = O(V + E)*/

// Space Complexity :- 
/*Adjacency list: O(V + E)
(plus small O(1) auxiliary variables)
Total = O(V + E)*/

#include<bits/stdc++.h>
using namespace std;

const int V = 4;

void addEdge(vector<int> graph[], int source, int destination) {
    graph[source].push_back(destination);
    graph[destination].push_back(source);
}

void printGraph(vector<int> graph[]) {
    cout<<"Adjacency list is : "<<endl;
    for(int source = 0; source < V; source++) {
        cout<<"Number of neighbours of "<<source<<" is "<<graph[source].size()<<endl;
        for(int neighbour: graph[source]) {
            cout<<"There is an edge between "<<source<<" and "<<neighbour<<endl;
        }
        cout<<endl;
    }
}

int main() {
    
    vector<int> graph[V];
    
    addEdge(graph, 0, 1);
    addEdge(graph, 0, 2);
    addEdge(graph, 0, 3);
    addEdge(graph, 1, 2);
    
    printGraph(graph);
    
    return 0;
}
