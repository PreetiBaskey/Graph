#include<bits/stdc++.h>
using namespace std;

int checkRottenOranges(vector<vector<int>> &grid, vector<vector<int>> &visited, queue<pair<pair<int, int>, int>> &q) {
    int n = grid.size();
    int m = grid[0].size();
    int delRow[] = {-1, 0, 1, 0};
    int delCol[] = {0, 1, 0, -1};
    int unitTime = 0;
    
    while(!q.empty()) {
        int front_row = q.front().first.first;
        int front_col = q.front().first.second;
        unitTime = q.front().second;
        q.pop();
        for(int i = 0; i < 4; i++) {
            int newRow = front_row + delRow[i];
            int newCol = front_col + delCol[i];
            if(newRow >= 0 && newRow < n && newCol >= 0 && newCol < m && grid[newRow][newCol] == 1 && !visited[newRow][newCol]) {
                q.push({{newRow, newCol}, unitTime + 1});
                visited[newRow][newCol] = 1;
                grid[newRow][newCol] = 2;
            }
        }
    }
    
    return unitTime;
}

int main() {
    
    int n, m;
    
    cout<<"Enter number of rows :- ";
    cin>>n;
    cout<<"Enter number of columns :- ";
    cin>>m;
    
    vector<vector<int>> grid(n, vector<int>(m, 0));
    vector<vector<int>> visited(n, vector<int>(m, 0));
    queue<pair<pair<int, int>, int>> q;
    
    for(int i = 0; i < n; i++) {
        cout<<"Enter "<<i + 1<<" th row :- ";
        for(int j = 0; j < m;j ++) {
            cin>>grid[i][j];
        }
    }
    cout<<"2 D grid is :- "<<endl;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cout<<grid[i][j]<<" ";
            if(grid[i][j] == 2) {
                q.push({{i, j}, 0});
            }
        }
        cout<<endl;
    }
    
    int earliestTime = checkRottenOranges(grid, visited, q);
    cout<<"Unit time is :- "<<earliestTime;
    
    cout<<endl<<"Final grid is :- "<<endl;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cout<<grid[i][j]<<" ";
        }
        cout<<endl;
    }
    
    
    
    return 0;
}
