#include<bits/stdc++.h>
using namespace std;

const int V = 4;

void addEdge(vector<int> graph[], int source, int destination) {
    graph[source].push_back(destination);
    graph[destination].push_back(source);
}

void DFS(vector<int> graph[], vector<int> &visited, int initial_node) {
    visited[initial_node] = 1;
    cout<<initial_node<<" ";
    for(int neighbour: graph[initial_node]) {
        if(!visited[neighbour]) {
            DFS(graph, visited, neighbour);
        }
    }
}

int main() {
    
    vector<int> graph[V];
    
    addEdge(graph, 0, 1);
    addEdge(graph, 0, 2);
    addEdge(graph, 0, 3);
    addEdge(graph, 1, 2);
    
    int initial_node = 1;
    vector<int> visited(V, 0);
    
    cout<<"Depth First Search is :- ";
    DFS(graph, visited, initial_node);
    
    return 0;
}
